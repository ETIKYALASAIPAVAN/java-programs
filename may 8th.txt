WAP to input basic salary of an employee and calculate its Gross     salary according to following:
    Basic Salary <= 10000 : HRA = 20%, DA = 80%
    Basic Salary <= 20000 : HRA = 25%, DA = 90%
    Basic Salary > 20000 : HRA = 30%, DA = 95%

import java.util.Scanner;

 

public class GrossSalary {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    double basic_salary;
    double hra, da, gross_salary;
    System.out.println("enter the basic salary");
    basic_salary = sc.nextDouble();
    if (basic_salary <= 10000) {
      hra = ((20.0 / 100.0) * basic_salary);
      da = ((80.0 / 100.0) * basic_salary);
      gross_salary = basic_salary + hra + da;
      System.out.println("gross salary is:" + gross_salary);
    } else if (basic_salary <= 20000) {
      hra = ((25.0 / 100.0) * basic_salary);
      da = ((90.0 / 100.0) * basic_salary);
      gross_salary = basic_salary + hra + da;
      System.out.println("gross salary is:" + gross_salary);
    } else if (basic_salary > 20000) {
      hra = ((30.0 / 100.0) * basic_salary);
      da = ((95.0 / 100.0) * basic_salary);
      gross_salary = basic_salary + hra + da;
      System.out.println("gross salary is:" + gross_salary);
    } else {
      System.out.println("invalid entry");
    }

 

  }
}
-----------------------------




    //Given two non-negative integers low and high,find the count of odd numbers between low and high (inclusive). use conditional statements only(not loops)
import java.util.Scanner;
public class LowOrHigh
  {​​​​​​​
    public static void main(String[] args)
    {​​​​​​​
      Scanner sc = new Scanner(System.in);
      int low,high,count;
      System.out.println("enter the low number");
      low = sc.nextInt();
      System.out.println("enter the high number");
      high = sc.nextInt();
      if((low%2==0))
      {​​​​​​​
        low++;
      }​​​​​​​
      if((high%2==0))
      {​​​​​​​
        high--;
      }​​​​​​​
      count = (high-low)/2+1;
      System.out.println("count of odd numbers is"  +count);
     
    }​​​​​​​
  }​​​​​​​
​
    

//WAP to takes a temperature in Celsius or Fahrenheit as input and converts it to the other unit
import java.util.Scanner;


public class Program2 {​​​​​​​
  public static void main(String[] args) {​​​​​​​
    Scanner sc = new Scanner(System.in);
    char ch;
    float temp;
    System.out.println("enter a temparature");
    ch = sc.next().charAt(0);
    if (ch == 'c' || ch == 'C') {​​​​​​​
      System.out.println("enter a celsius value");
      temp = sc.nextFloat();
      System.out.println("fahrenheit value is " + ((temp * 9) / 5) + 32);
    }​​​​​​​ else if (ch == 'f' || ch == 'F') {​​​​​​​
      System.out.println("enter a fahrenheit value");
      temp = sc.nextFloat();
      System.out.println("fahrenheit value is " + ((temp - 32) * 5) / 9);
    }​​​​​​​ else
      System.out.println("invalid character");
  }​​​​​​​
}​​​​​​​

Create an application that takes a person's birthdate as input and calculates their current age. Use conditional statements to determine if they are a minor or an adult.
 

import java.util.Scanner;
public class CalculateAge{
public static void main(String[]args){
Scanner sc=new Scanner(System.in);
int birthdate;
int currentyear;
int age;
System.out.println("enter the date in the format YYYY-MM-DD");
birthdate=sc.nextInt();
System.out.println("enter the current year in the format (YYYY-MM-DD");
currentyear=sc.nextInt();
age=sc.nextInt();
age = birthdate-currentyear;
System.out.println("age is:"+age);
}
}
-------------------
import java.util.Scanner;
import java.time.LocalDate;
import java.time.Period;
public class AgeCalculate
  {
  public static void main(String[] args)
    {
    Scanner sc=new Scanner(System.in);
    System.out.println("Enter the date in the format YYYY-MM-DD:");
    String BirthDateString=sc.nextLine();
    LocalDate BirthDate= LocalDate.parse(BirthDateString);
    LocalDate CurrentDate=LocalDate.now();
    Period age=Period.between(BirthDate, CurrentDate);
    System.out.println("Year-"+age.getYears()+"Months-"+age.getMonths()+"Days-"+age.getDays());
    if(age.getYears()>=18)
    {
      System.out.println("Adult");
    }
    else{
      System.out.println("Minor");
    }
  }
}


 

  




-------------------

//calculate perfect square

import java.lang.Math;
import java.util.Scanner;
class PerfectSquare{
public static void main(String[]args){
Scanner sc=new Scanner(System.in);
int num;
System.out.println("enter the number:");
num=sc.nextInt();
double sq=Math.sqrt(num);
if(sq==(int)sq) 
System.out.print("the given number is a perfect square");
else 
System.out.print("The given number is not a perfect square");


}
}


Write a program that takes in two integers as input and outputs their sum if both the integers are even. If both integers are odd, output their product. If one of the integers is odd and the other is even, output their difference.

import java.util.Scanner;
public class Program11{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int n1,n2;
    System.out.println("enter the n1 and n2 values");
    n1 = sc.nextInt();
    n2 = sc.nextInt();
    if (n1%2==0 && n2%2==0)
        System.out.println("sum is "+(n1+n2));
    if (n1%2!=0 && n2%2!=0)
        System.out.println("product is "+(n1*n2));
    if ((n1%2==0 && n2%2!=0) || (n1%2!=0 && n2%2==0))
        System.out.println("difference is "+(n1-n2));
  }
}




Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
Symbol       Value
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
For example, 2 is written as II in Roman numeral, just two one's added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.
Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:
I can be placed before V (5) and X (10) to make 4 and 9.X can be placed before L (50) and C (100) to make 40 and 90.C can be placed before D (500) and M (1000) to make 400 and 900.
Given an integer, convert it to a roman numeral.
 
Example 1:
Input: num = 3
Output: "III"
Explanation: 3 is represented as 3 ones.
Example 2:
Input: num = 58
Output: "LVIII"
Explanation: L = 50, V = 5, III = 3.
Example 3:
Input: num = 1994
Output: "MCMXCIV"
Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.



import java.util.Scanner;
class Roman_number{
  public static void main(String[] args){
    int number,division=0;
    Scanner sc=new Scanner(System.in);
    System.out.println("Enter the number");
    number=sc.nextInt();
    while(number>1){
      if(number>=1000){
        division=number/1000;
        while(division>0){
          System.out.print("M");
          division--;
        }
        number=number%1000;
       
      }
      else if(number>=900){
        division=number/900;
        while(division>0){
          System.out.print("CM");
          division--;
        }
        number=number%900;
      }
      else if(number>=500){
        division=number/500;
        while(division>0){
          System.out.print("D");
          division--;
        }
        number=number%500;
      }
      else if(number>=100){
        division=number/100;
        while(division>0){
          System.out.print("C");
          division--;
        }
        number=number%100;
      }
      else if(number>=90){
        division=number/90;
        while(division>0){
          System.out.print("XC");
          division--;
        }
        number=number%90;
      }
      else if(number>=50){
        division=number/50;
        while(division>0){
          System.out.print("L");
          division--;
        }
        number=number%50;
      }
      else if(number>=40){
        division=number/40;
        while(division>0){
          System.out.print("XL");
          division--;
        }
        number=number/40;
      }
      else if(number>=10){
        division=number/10;
        while(division>0){
          System.out.print("X");
          division--;
        }
        number=number/10;
      }
      else if(number>=9){
        division=number/9;
        while(division>0){
          System.out.print("IX");
          division--;
        }
        number=number/9;
      }
      else if(number>=5){
        division=number/5;
        while(division>0){
          System.out.print("X");
          division--;
        }
        number=number/5;
      }
      else if(number>=4){
        division=number/4;
        while(division>0){
          System.out.print("IV");
          division--;
        }
        number=number/4;
      }
      else{
        division=number;
        while(division>0){
          System.out.print("I");
          division--;
        }
        number=0;
      }
    }
  }
}


WAP to input week number and print week day.

import java.util.Scanner;
class WeekNumbers
{
	public static void main(String[] args)
	{
		Scanner input = new Scanner(System.in);
		System.out.print("Enter the Week Number(1-7) :");
		int num = input.nextInt();			
		if(num==1)
			System.out.println("This is a Sunday");
		else if(num==2)
			System.out.println("This is a Monday");
		else if(num==3)
			System.out.println("This is a Tuesday");
		else if(num==4)
			System.out.println("This is a Wednesday");
		else if(num==5)
			System.out.println("This is a Thursday");
		else if(num==6)
			System.out.println("This is a Friday");
		else if(num==7)
			System.out.println("This is a Saturday");
		else
			System.out.println("Enter 1 to 7...");
	}
}


WAP to input electricity unit charges and calculate total     electricity bill according to the given condition:
    For first 50 units Rs. 0.50/unit
    For next 100 units Rs. 0.75/unit
    For next 100 units Rs. 1.20/unit
     For unit above 250 Rs. 1.50/unit
     An additional surcharge of 20% is added to the bill*/
    
     import java.util.Scanner;
     public class program5{
         public static void main(String[] args){
             Scanner sc = new Scanner(System.in);
             double units,bill,final_bill;
             System.out.println("enter the number of units");
             units = sc.nextDouble();
             if (units<=50)
                 bill = units*0.50;
             else if (units<=150)
                 bill = (50*0.50)+((units-50)*0.75);
             else if (units<=250)
                 bill = (50*0.50)+(100*0.75)+((units-150)*1.20);
             else
                 bill = (50*0.50)+(100*0.75)+(100*1.20)+((units-250)*1.50);
            final_bill = bill+((20*bill)/100);
            System.out.println("final bill is "+final_bill);
            
            
         }
     }


write a java program to check whether a  year is a leap year or not .

import java.util.Scanner;
public class LeapYear
  {
    public static void main (String[] agrs)
    {
      int year;
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter an year:");
      year=sc.nextInt();
      if((year%4==0) && (year%100!=0)||(year%400==0))
      {
        System.out.println("year is leap year");
      }
      else
      {
        System.out.println("year is not a leap year");
        
      }
    }
  }
